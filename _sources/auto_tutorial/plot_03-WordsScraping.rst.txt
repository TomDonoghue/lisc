.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_tutorial_plot_03-WordsScraping.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorial_plot_03-WordsScraping.py:


Tutorial 03 - Words Scraping
============================


Words

'Words' scrapes abstract text data, and paper meta-data, for all papers found for a given set of terms.



Words
-----

Another way to scrape the data is to get some paper data from


Import LISC - Words



.. code-block:: python

    from lisc.words import Words
    from lisc.scrape import scrape_words








.. code-block:: python


    # Set up some test data
    #  Note that each entry should be a list
    terms_a = [['brain'], ['cognition']]
    terms_b = [['body'], ['biology'], ['disease']]







Function Approach: scrape_words
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Scrape words data - set the scrape to return data for at most 5 papers per term



.. code-block:: python

    dat, meta_dat = scrape_words(terms_a, retmax='5', use_hist=False, save_n_clear=False, verbose=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Scraping words for:  brain
    Scraping words for:  cognition



.. code-block:: python


    # The function returns a list of LISC Data objects
    dat








.. code-block:: python


    # Each data object holds the data for the scraped papers
    d1 = dat[0]








.. code-block:: python


    # Print out some of the data
    print(d1.n_articles, '\n')
    print('\n'.join(d1.titles), '\n')






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    5 

    Rupture risk of small unruptured cerebral aneurysms.
    Predictors of neoangiogenesis after indirect revascularization in moyamoya disease: a multicenter retrospective study.
    Dual responsive neurostimulation implants for epilepsy.
    In vitro and in vivo testing of a novel local nicardipine delivery system to the brain: a preclinical study.
    Combined use of minimal access craniotomy, intraoperative magnetic resonance imaging, and awake functional mapping for the resection of gliomas in 61 patients.


Object Approach: Words
----------------------



.. code-block:: python


    # Initialize Words object
    words = Words()

    # Set terms to search
    words.set_terms(terms_a)

    # Run words scrape
    words.run_scrape(retmax='5', save_n_clear=False)








Words also saves the same list of Data objects



.. code-block:: python

    words.results

    # The use of synonyms and exclusion words, demonstrated above for counts, applies in the same way to the scraping words.







Metadata
--------

Regardless of what you are scraping, or how you run it through LISC, there is some meta-data saved.

This data is collected in a dictionary, that is returned by the scrape functions (and saved to the objects, if applicable).


The meta data includes some information on the database that was scraped



.. code-block:: python

    meta_dat['db_info']
    #
    # This data is also saved to object
    words.meta_dat['db_info']







It also includes the Requester object, which is used to launch URL requests
  This object also stores some details about the scrape
  It can be used, for example, to track how long scrapes take, and how many requests they include



.. code-block:: python

    print('Start time:    ', meta_dat['req'].st_time)
    print('End time:      ', meta_dat['req'].en_time)
    print('# of requests: ', meta_dat['req'].n_requests)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Start time:     20:24 Sunday 27 January
    End time:       20:24 Sunday 27 January
    # of requests:  5


**Total running time of the script:** ( 0 minutes  13.723 seconds)


.. _sphx_glr_download_auto_tutorial_plot_03-WordsScraping.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_03-WordsScraping.py <plot_03-WordsScraping.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_03-WordsScraping.ipynb <plot_03-WordsScraping.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
