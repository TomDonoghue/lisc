.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_requester_urls.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_requester_urls.py:


URLs and Requests
=================

WORDS, WORDS, WORDS.


URLs & Requests
---------------

MORE WORDS.

Note that to use the main LISC functionality, you probably don't
have to deal with these objects directly.

This example is for if WORDS WORDS WORDS.




.. code-block:: python


    from lisc.requester import Requester







Requester Object
~~~~~~~~~~~~~~~~

MORE WORDS.




.. code-block:: python


    # Initialize a requester object
    req = Requester()








.. code-block:: python


    # Set the minimum wait time between requests
    req.set_wait_time(0.5)








.. code-block:: python


    for url in ['https://www.google.com', 'https://www.yahoo.com', 'https://duckduckgo.com']:
        page = req.request_url(url)
        print('Collecting web page \t {} \t got status code \t {}'.format(page.url, page.status_code))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Collecting web page      https://www.google.com/         got status code         200
    Collecting web page      https://www.yahoo.com/          got status code         200
    Collecting web page      https://duckduckgo.com/         got status code         200



.. code-block:: python


    # Check details of the requester object
    req.check()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Requester object is active:      True
    Number of requests sent:         3
    Requester opened:                10:17:15 Thursday 01 August 2019
    Requester closed:



.. code-block:: python


    # Get information from the requester object as a dictionary
    print(req.as_dict())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'is_active': True, 'n_requests': 3, 'wait_time': 0.5, 'start_time': '10:17:15 Thursday 01 August 2019', 'end_time': '', 'logging': None, 'log': None}


URLs Object
~~~~~~~~~~~

MORE WORDS.




.. code-block:: python


    from lisc.urls import URLs








.. code-block:: python


    base_path = 'https://api.duckduckgo.com/'
    urls = URLs(base_path, {'search' : ''})








.. code-block:: python


    # Build and check the search URL
    urls.build_url('search', settings={'format': 'json'})
    urls.check_url('search')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    https://api.duckduckgo.com/?format=json



.. code-block:: python


    # Get
    api_url = urls.get_url('search', settings={'q' : 'brain'})
    print(api_url)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    https://api.duckduckgo.com/?format=json&q=brain



.. code-block:: python


    api_page = req.request_url(api_url)







WORDS HERE.




.. code-block:: python


    # Check the source of the first search result
    api_page.json()['AbstractSource']






**Total running time of the script:** ( 0 minutes  2.758 seconds)


.. _sphx_glr_download_auto_examples_plot_requester_urls.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_requester_urls.py <plot_requester_urls.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_requester_urls.ipynb <plot_requester_urls.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
