.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_functions_words.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_functions_words.py:


Words with Functions
====================

Collect article text data and metadata, using a function oriented approach.


Function Approach: collect_words
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The core function for collecting words data is the `collect_words` function.

Given a list of search terms, this function handles all the requests to collect the data.

The parameters for the `collect_words` function are the same as available and described
in the `Words` tutorial.

Here we will briefly explore collecting data directly using the function approach.




.. code-block:: python


    # Import function to collect data
    from lisc.collect import collect_words








.. code-block:: python


    # Set some terms to search for
    terms = [['brain'], ['body']]








.. code-block:: python


    # Collect words data, setting the collection return data for at most 5 articles per term
    results, meta_data = collect_words(terms, retmax='5', usehistory=False,
                                   save_and_clear=False, verbose=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Collecting data for:  brain
    Collecting data for:  body



.. code-block:: python


    # The meta data includes some information on the database from which data was collected
    meta_data['db_info']








.. code-block:: python


    # The function returns a list of Articles objects
    print(results)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [<lisc.data.articles.Articles object at 0x122cbaba8>, <lisc.data.articles.Articles object at 0x122d12c88>]



.. code-block:: python


    # Each `Articles` object holds the data for the collected articles for a given term
    res1 = results[0]








.. code-block:: python


    # Print out some of the data
    print(res1.n_articles, '\n')
    print('\n'.join(res1.titles), '\n')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    4 

    Amygdala Resting State Connectivity Differences between Bipolar II and Borderline Personality Disorders.
    Protective Effect of Diphenhydramine against Traumatic Brain Injury in Rats via Modulation of Oxidative Stress and Inflammation.
    Clinical Validation of Quality Improvements Using the Six Sigma Concept: A Case Study for Deep Brain Stimulation in Parkinson's Disease.
    Plasma Levels, Temporal Trends and Clinical Associations between Biomarkers of Inflammation and Vascular Homeostasis after Pediatric Traumatic Brain Injury.


To further explore the data collected and available, and what can be accessed,
check out the documentation for the `Articles` object, and what attributes it contains.



**Total running time of the script:** ( 0 minutes  6.367 seconds)


.. _sphx_glr_download_auto_examples_plot_functions_words.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_functions_words.py <plot_functions_words.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_functions_words.ipynb <plot_functions_words.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
